package edu.temple.dicethrow

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import kotlin.random.Random

// A key to retrieve the number of sides of the die
const val DIESIDE = "sidenumber"
const val ROLLSAVED = "rollValue" //Can make it local too, why not lol

class DieFragment : Fragment() {
    //Initializing the TextView
    lateinit var dieTextView: TextView

    // A default value for the sides of the die
    var dieSides: Int = 6
    //Store the current roll
    var rollValue : Int = 0

    // Sets up the DieFragment class AKA the constructor
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        //So when a DieFragment is created, check if there are any arguments and that it passes
        // a bundle. In this bundle, it will get the integer value of the die sides
        // Set the dieSide variable we have with the value in the bundle
        arguments?.let {
            it.getInt(DIESIDE).run {
                dieSides = this
            }
        }
    }

    //Saves the previous State/roll
    override fun onSaveInstanceState(outState: Bundle) {
        super.onSaveInstanceState(outState)
        //Save the roll value in outState bundle
        outState.putInt(ROLLSAVED, rollValue)
    }

    // Initialize our view. In this case, we have a single TextView that will display the number
    // Here, it is inflated and defined
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_die, container, false).apply {
            //Initialize the TextView in the layout
            dieTextView = findViewById(R.id.dieTextView)
        }
    }


    // When the view is created, a number is randomly generated by calling our function
    // throwDie(). Additionally, when the TextView is clicked, the number will randomize again
    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        //If this fragment is already made, then take the previous roll and save that in our rollValue
        savedInstanceState?.run {
            rollValue = getInt(ROLLSAVED)

        }

        //When the rollValue is not 0, display the rollValue
        if(rollValue != 0) {
            dieTextView.text = rollValue.toString()
        } else {
            //Else generate a new roll
            throwDie()
        }
    }

    // A simple random number generator that generates a number from 1 to the number of sides
    fun throwDie() {
        //Random.nextInt(dieSide) generates a number from 0-5
        //Adding 1 to the result will generate a number from 1-6
        //Save the roll value
        rollValue = (Random.nextInt(dieSides)+1)
        //For a text view, convert the given integer to a string using toString()
        dieTextView.text = rollValue.toString()
    }

    // A companion object that creates a new instance of the DieFragment class,
    // Quick way to access our DieFragment constructor
    companion object{
        //Creating function newInstance, which will create a DieFragment object
        fun newInstance(sides : Int): DieFragment{
            //Create a bundle to pass the number of sides
            val bundle = Bundle()
            bundle.putInt(DIESIDE, sides)

            //Create die fragment object
            val frag = DieFragment()

            //Put bundle in the fragment
            frag.arguments = bundle

            //return the DieFragment
            return frag
        }
    }
}